/*
 * This code was auto generated by AfterShip SDK Generator.
 * Do not edit the class manually.
 */
package com.aftership.courier;

import com.aftership.base.Creator;
import com.aftership.http.*;
import com.aftership.model.DetectCourierRequest;
import com.aftership.model.DetectCourierResponse;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.util.HashMap;
import java.util.Map;

public class DetectCourierCreator extends Creator<DetectCourierResponse> {
  private final Map<String, String> headerParams = new HashMap<>(8);
  private DetectCourierRequest detectCourierRequest;

  public DetectCourierCreator addHeaderParam(final String name, final String value) {
    if (value == null || value.equals("null")) {
      return this;
    }

    if (!headerParams.containsKey(name)) {
      headerParams.put(name, value);
    }
    return this;
  }

  private void setHeaderParams(final Request request) {
    for (final Map.Entry<String, String> entry : headerParams.entrySet()) {
      request.addHeaderParam(entry.getKey(), entry.getValue());
    }
  }

  public DetectCourierCreator setDetectCourierRequest(DetectCourierRequest detectCourierRequest) {
    this.detectCourierRequest = detectCourierRequest;
    return this;
  }

  @Override
  public DetectCourierResponse create(AfterShipClient client) throws Exception {
    String path = "/tracking/2025-01/couriers/detect";
    Request request = new Request(HttpMethod.POST, path);
    request.setBody((new Gson()).toJson(detectCourierRequest));

    setHeaderParams(request);
    Response response = client.request(request);
    AfterShipResponse<DetectCourierResponse> trackingResponse =
        new Gson()
            .fromJson(
                response.getContent(),
                new TypeToken<AfterShipResponse<DetectCourierResponse>>() {}.getType());
    return trackingResponse.getData();
  }
}
