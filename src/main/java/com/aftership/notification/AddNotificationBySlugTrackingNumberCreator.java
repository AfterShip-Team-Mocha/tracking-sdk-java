/*
 * This code was auto generated by AfterShip SDK Generator.
 * Do not edit the class manually.
 */
package com.aftership.notification;

import com.aftership.base.Creator;
import com.aftership.constant.ErrorEnum;
import com.aftership.exception.ApiException;
import com.aftership.http.*;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.util.HashMap;
import java.util.Map;
import com.aftership.http.Request;
import com.aftership.model.AddNotificationBySlugTrackingNumberResponse;
import com.aftership.base.Page;
import com.aftership.model.AddNotificationBySlugTrackingNumberRequest;
import com.aftership.model.Notification;
import com.aftership.model.NotificationRequestV1;

import com.aftership.model.AddNotificationBySlugTrackingNumberResponse;

public class AddNotificationBySlugTrackingNumberCreator extends Creator<Notification> {
    private final Map<String, String> headerParams= new HashMap<>(8);

    public AddNotificationBySlugTrackingNumberCreator addHeaderParam(final String name, final String value) {
        if (value == null || value.equals("null")) {
            return this;
        }

        if (!headerParams.containsKey(name)) {
            headerParams.put(name, value);
        }
        return this;
    }

    private void setHeaderParams(final Request request) {
        for (final Map.Entry<String, String> entry : headerParams.entrySet()) {
            request.addHeaderParam(entry.getKey(), entry.getValue());
        }
    }
    private NotificationRequestV1 addNotificationBySlugTrackingNumberRequest;

    public AddNotificationBySlugTrackingNumberCreator setNotificationRequestV1(NotificationRequestV1 addNotificationBySlugTrackingNumberRequest) {
        this.addNotificationBySlugTrackingNumberRequest = addNotificationBySlugTrackingNumberRequest;
        return this;
    }
     private String trackingAccountNumber;

     private String trackingOriginCountry;

     private String trackingDestinationCountry;

     private String trackingKey;

     private String trackingPostalCode;

     private String trackingShipDate;

     private String trackingState;

    private String slug;

    private String tracking_number;


    public AddNotificationBySlugTrackingNumberCreator setTrackingAccountNumber(String trackingAccountNumber) {
        this.trackingAccountNumber = trackingAccountNumber;
        return this;
    }

    public AddNotificationBySlugTrackingNumberCreator setTrackingOriginCountry(String trackingOriginCountry) {
        this.trackingOriginCountry = trackingOriginCountry;
        return this;
    }

    public AddNotificationBySlugTrackingNumberCreator setTrackingDestinationCountry(String trackingDestinationCountry) {
        this.trackingDestinationCountry = trackingDestinationCountry;
        return this;
    }

    public AddNotificationBySlugTrackingNumberCreator setTrackingKey(String trackingKey) {
        this.trackingKey = trackingKey;
        return this;
    }

    public AddNotificationBySlugTrackingNumberCreator setTrackingPostalCode(String trackingPostalCode) {
        this.trackingPostalCode = trackingPostalCode;
        return this;
    }

    public AddNotificationBySlugTrackingNumberCreator setTrackingShipDate(String trackingShipDate) {
        this.trackingShipDate = trackingShipDate;
        return this;
    }

    public AddNotificationBySlugTrackingNumberCreator setTrackingState(String trackingState) {
        this.trackingState = trackingState;
        return this;
    }

    public AddNotificationBySlugTrackingNumberCreator setSlug(String slug) {
        this.slug = slug;
        return this;
    }

    public AddNotificationBySlugTrackingNumberCreator setTrackingNumber(String tracking_number) {
        this.tracking_number = tracking_number;
        return this;
    }

    @Override
    public Notification create(AfterShipClient client) throws Exception {
        if (slug == null || slug.isEmpty()) {
            throw new ApiException(ErrorEnum.BAD_REQUEST.getCode(), ErrorEnum.BAD_REQUEST.getMessage() + ": `slug` is invalid");
        }
        if (tracking_number == null || tracking_number.isEmpty()) {
            throw new ApiException(ErrorEnum.BAD_REQUEST.getCode(), ErrorEnum.BAD_REQUEST.getMessage() + ": `tracking_number` is invalid");
        }
        String path = String.format("/tracking/2024-04/notifications/%s/%s/add", slug,tracking_number);
        Request request = new Request(HttpMethod.POST, path);
        AddNotificationBySlugTrackingNumberRequest NotificationRequestV1 = new AddNotificationBySlugTrackingNumberRequest();
        NotificationRequestV1.setNotification(addNotificationBySlugTrackingNumberRequest);
        request.setBody((new Gson()).toJson(NotificationRequestV1));

        addQueryParams(request);
        setHeaderParams(request);
        Response response = client.request(request);
        AfterShipResponse<AddNotificationBySlugTrackingNumberResponse> trackingResponse = new Gson().fromJson(response.getContent(), new TypeToken<AfterShipResponse<AddNotificationBySlugTrackingNumberResponse>>() {
            }.getType());
        return trackingResponse.getData().getNotification();

    }

    private void addQueryParams(final Request request) {
        if (trackingAccountNumber != null) {
            request.addQueryParam("tracking_account_number", trackingAccountNumber);
        }
        if (trackingOriginCountry != null) {
            request.addQueryParam("tracking_origin_country", trackingOriginCountry);
        }
        if (trackingDestinationCountry != null) {
            request.addQueryParam("tracking_destination_country", trackingDestinationCountry);
        }
        if (trackingKey != null) {
            request.addQueryParam("tracking_key", trackingKey);
        }
        if (trackingPostalCode != null) {
            request.addQueryParam("tracking_postal_code", trackingPostalCode);
        }
        if (trackingShipDate != null) {
            request.addQueryParam("tracking_ship_date", trackingShipDate);
        }
        if (trackingState != null) {
            request.addQueryParam("tracking_state", trackingState);
        }

    }
}
